#
# Autogenerated by Thrift Compiler (0.12.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'freway_types'

module VisualizarReportes
  class Client
    include ::Thrift::Client

    def getAllReportes()
      send_getAllReportes()
      return recv_getAllReportes()
    end

    def send_getAllReportes()
      send_message('getAllReportes', GetAllReportes_args)
    end

    def recv_getAllReportes()
      result = receive_message(GetAllReportes_result)
      return result.success unless result.success.nil?
      raise result.exp unless result.exp.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'getAllReportes failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_getAllReportes(seqid, iprot, oprot)
      args = read_args(iprot, GetAllReportes_args)
      result = GetAllReportes_result.new()
      begin
        result.success = @handler.getAllReportes()
      rescue ::Error => exp
        result.exp = exp
      end
      write_result(result, oprot, 'getAllReportes', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class GetAllReportes_args
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetAllReportes_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0
    EXP = 1

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Reporte}},
      EXP => {:type => ::Thrift::Types::STRUCT, :name => 'exp', :class => ::Error}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

