#
# Autogenerated by Thrift Compiler (0.12.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'freway_types'

module VerReporte
  class Client
    include ::Thrift::Client

    def getReporte(idReporte)
      send_getReporte(idReporte)
      return recv_getReporte()
    end

    def send_getReporte(idReporte)
      send_message('getReporte', GetReporte_args, :idReporte => idReporte)
    end

    def recv_getReporte()
      result = receive_message(GetReporte_result)
      return result.success unless result.success.nil?
      raise result.exp unless result.exp.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'getReporte failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_getReporte(seqid, iprot, oprot)
      args = read_args(iprot, GetReporte_args)
      result = GetReporte_result.new()
      begin
        result.success = @handler.getReporte(args.idReporte)
      rescue ::Error => exp
        result.exp = exp
      end
      write_result(result, oprot, 'getReporte', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class GetReporte_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    IDREPORTE = 1

    FIELDS = {
      IDREPORTE => {:type => ::Thrift::Types::I32, :name => 'idReporte'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetReporte_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0
    EXP = 1

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::Reporte},
      EXP => {:type => ::Thrift::Types::STRUCT, :name => 'exp', :class => ::Error}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

